version: '3.9'

services:
  agent:
    image: agent_service:latest
    networks:
      core_network:
        aliases:
          - agent1
      unl_1:
        aliases:
          - agent1
    environment:
      AMQ_PASSWORD_FILE: /run/secrets/rabbitmq_user
      AMQ_USER: normal_user
      HOSTNAME: unl1
    secrets:
      - rabbitmq_user
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - service_logs:/var/log/service_logs
    deploy:
      replicas: 1
      # placement:
      #   constraints:
      #     - node.role == worker
      #     - node.labels.server == agent1

  # agent2:
  #   image: agent_service:latest
  #   networks:
  #     core_network:
  #       aliases:
  #         - agent2
  #     unl_2:
  #       aliases:
  #         - agent2
  #   environment:
  #     INPUT_QUEUE: core_queue_agent
  #     AMQ_PASSWORD_FILE: /run/secrets/rabbitmq_user
  #     AMQ_USER: normal_user
  #     HOSTNAME: agent1
  #   secrets:
  #     - rabbitmq_user
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - service_logs:/var/log/service_logs
  #   deploy:
  #     replicas: 1
  #     # placement:
  #     #   constraints:
  #     #     - node.role == worker
  #     #     - node.labels.server == agent1


secrets:
  rabbitmq_user:
    external: true

networks:
  core_network:
    external: true
  unl_1:
    external: true
  unl_2:
    external: true
  third_party:
    external: true

volumes:
  service_logs:
    external: true